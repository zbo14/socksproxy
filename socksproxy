#!/bin/bash -e

DIR=$(dirname "$(readlink $0)")
cd $DIR

. .env

case $1 in
  add-host)
    if [[ $# != 4 ]]
    then
      echo "Usage: socksproxy <add-host> HOST PORT PUBKEY"
      exit 0
    fi

    echo "[$2]:$3 $4" >> home/socksproxy/.ssh/known_hosts
    ;;

  build)
    docker build --no-cache -t socksproxy .
    ;;

  get-key)
    cat home/socksproxy/.ssh/id_ed25519.pub
    ;;

  init)
    mkdir -p home{,/socksproxy{,/.ssh}}
    touch home/socksproxy/.ssh/known_hosts
    ssh-keygen -t ed25519 -f home/socksproxy/.ssh/id_ed25519 -N ''
    ;;

  start)
    if [[ $# != 3 ]]
    then
      echo "Usage: socksproxy <start> HOST PORT"
      exit 0
    fi

    docker run \
      -d \
      -e HOST=$2 \
      -e PORT=$3 \
      -e SOCKS_PORT=$SOCKS_PORT \
      -e HTTP_PORT=$HTTP_PORT \
      --name socksproxy \
      -p $SOCKS_PORT:$SOCKS_PORT \
      -p $HTTP_PORT:$HTTP_PORT \
      -v $DIR/home/socksproxy/.ssh:/home/socksproxy/.ssh:ro \
      socksproxy
    ;;

  stop)
    docker rm -fv socksproxy
    ;;

  *)
    echo $'Usage: socksproxy <command> ARGS

Commands:
  add-host  HOST PORT PUBKEY  Add a host and its public key to the known_hosts file
  build                       Build the Docker image
  get-key                     Print the proxy\'s public key
  init                        Setup directory structure and SSH keys
  start     HOST PORT         Start a Docker container running the proxy (connects to HOST:PORT)
  stop                        Remove the Docker container and its volume'
    ;;
esac
